{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joachim\\\\Documents\\\\WebDev_Playground_2023\\\\luftschadstoffe\\\\src\\\\components\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport noxData from \"../data/nox.json\";\nimport LineChart from \"./LineChart\";\n\n// Get all categories from the data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = noxData.map(row => row[\"Emission source categories\"]);\n\n// Default selected: only \"Energy Industries\"\nconst defaultCategory = \"1. Energy Industries\";\nconst initialSelected = categories.filter(cat => cat === defaultCategory);\nconst Dashboard = () => {\n  _s();\n  const [selected, setSelected] = useState(initialSelected);\n  const toggleCategory = cat => {\n    setSelected(prev => prev.includes(cat) ? prev.filter(c => c !== cat) : [...prev, cat]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 20,\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        gap: \"0.5rem\"\n      },\n      children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleCategory(cat),\n        style: {\n          background: selected.includes(cat) ? \"#007bff\" : \"#ccc\",\n          color: \"#fff\",\n          border: \"none\",\n          padding: \"0.5rem 1rem\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\",\n          fontSize: \"1rem\",\n          marginBottom: \"0.5rem\",\n          wordBreak: \"break-word\",\n          flex: \"1 1 180px\",\n          minWidth: \"120px\",\n          maxWidth: \"100%\"\n        },\n        children: cat\n      }, cat, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"calc(100vh - 180px)\",\n        maxHeight: \"600px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: noxData,\n        selectedCategories: selected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"rVQVMKh6k5FdDGgQw6FmTWNKPeU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","noxData","LineChart","jsxDEV","_jsxDEV","categories","map","row","defaultCategory","initialSelected","filter","cat","Dashboard","_s","selected","setSelected","toggleCategory","prev","includes","c","children","style","marginBottom","display","flexWrap","gap","onClick","background","color","border","padding","borderRadius","cursor","fontSize","wordBreak","flex","minWidth","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","width","height","maxHeight","justifyContent","alignItems","data","selectedCategories","_c","$RefreshReg$"],"sources":["C:/Users/Joachim/Documents/WebDev_Playground_2023/luftschadstoffe/src/components/Dashboard.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport noxData from \"../data/nox.json\";\r\nimport LineChart from \"./LineChart\";\r\n\r\n// Get all categories from the data\r\nconst categories = noxData.map((row: any) => row[\"Emission source categories\"]);\r\n\r\n// Default selected: only \"Energy Industries\"\r\nconst defaultCategory = \"1. Energy Industries\";\r\nconst initialSelected = categories.filter((cat) => cat === defaultCategory);\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const [selected, setSelected] = useState<string[]>(initialSelected);\r\n\r\n  const toggleCategory = (cat: string) => {\r\n    setSelected((prev) =>\r\n      prev.includes(cat) ? prev.filter((c) => c !== cat) : [...prev, cat]\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          marginBottom: 20,\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          gap: \"0.5rem\",\r\n        }}\r\n      >\r\n        {categories.map((cat) => (\r\n          <button\r\n            key={cat}\r\n            onClick={() => toggleCategory(cat)}\r\n            style={{\r\n              background: selected.includes(cat) ? \"#007bff\" : \"#ccc\",\r\n              color: \"#fff\",\r\n              border: \"none\",\r\n              padding: \"0.5rem 1rem\",\r\n              borderRadius: \"5px\",\r\n              cursor: \"pointer\",\r\n              fontSize: \"1rem\",\r\n              marginBottom: \"0.5rem\",\r\n              wordBreak: \"break-word\",\r\n              flex: \"1 1 180px\",\r\n              minWidth: \"120px\",\r\n              maxWidth: \"100%\",\r\n            }}\r\n          >\r\n            {cat}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"calc(100vh - 180px)\",\r\n          maxHeight: \"600px\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <LineChart data={noxData} selectedCategories={selected} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,SAAS,MAAM,aAAa;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAGJ,OAAO,CAACK,GAAG,CAAEC,GAAQ,IAAKA,GAAG,CAAC,4BAA4B,CAAC,CAAC;;AAE/E;AACA,MAAMC,eAAe,GAAG,sBAAsB;AAC9C,MAAMC,eAAe,GAAGJ,UAAU,CAACK,MAAM,CAAEC,GAAG,IAAKA,GAAG,KAAKH,eAAe,CAAC;AAE3E,MAAMI,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAWS,eAAe,CAAC;EAEnE,MAAMO,cAAc,GAAIL,GAAW,IAAK;IACtCI,WAAW,CAAEE,IAAI,IACfA,IAAI,CAACC,QAAQ,CAACP,GAAG,CAAC,GAAGM,IAAI,CAACP,MAAM,CAAES,CAAC,IAAKA,CAAC,KAAKR,GAAG,CAAC,GAAG,CAAC,GAAGM,IAAI,EAAEN,GAAG,CACpE,CAAC;EACH,CAAC;EAED,oBACEP,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MACEiB,KAAK,EAAE;QACLC,YAAY,EAAE,EAAE;QAChBC,OAAO,EAAE,MAAM;QACfC,QAAQ,EAAE,MAAM;QAChBC,GAAG,EAAE;MACP,CAAE;MAAAL,QAAA,EAEDf,UAAU,CAACC,GAAG,CAAEK,GAAG,iBAClBP,OAAA;QAEEsB,OAAO,EAAEA,CAAA,KAAMV,cAAc,CAACL,GAAG,CAAE;QACnCU,KAAK,EAAE;UACLM,UAAU,EAAEb,QAAQ,CAACI,QAAQ,CAACP,GAAG,CAAC,GAAG,SAAS,GAAG,MAAM;UACvDiB,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE,aAAa;UACtBC,YAAY,EAAE,KAAK;UACnBC,MAAM,EAAE,SAAS;UACjBC,QAAQ,EAAE,MAAM;UAChBX,YAAY,EAAE,QAAQ;UACtBY,SAAS,EAAE,YAAY;UACvBC,IAAI,EAAE,WAAW;UACjBC,QAAQ,EAAE,OAAO;UACjBC,QAAQ,EAAE;QACZ,CAAE;QAAAjB,QAAA,EAEDT;MAAG,GAjBCA,GAAG;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkBF,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrC,OAAA;MACEiB,KAAK,EAAE;QACLqB,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,qBAAqB;QAC7BC,SAAS,EAAE,OAAO;QAClBrB,OAAO,EAAE,MAAM;QACfsB,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE;MACd,CAAE;MAAA1B,QAAA,eAEFhB,OAAA,CAACF,SAAS;QAAC6C,IAAI,EAAE9C,OAAQ;QAAC+C,kBAAkB,EAAElC;MAAS;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAxDID,SAAmB;AAAAqC,EAAA,GAAnBrC,SAAmB;AA0DzB,eAAeA,SAAS;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}